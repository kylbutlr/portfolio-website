{"version":3,"sources":["Projects.js","App.js","serviceWorker.js","index.js"],"names":["Projects","react_default","a","createElement","className","href","tabs","HOME","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","activeTab","scroller","scrollTo","duration","delay","smooth","modules","activeClass","to","spy","name","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7c64df4c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default () => (\r\n  <div className='projects'>\r\n    <h5>PROJECTS</h5>\r\n    <div className='project1'>\r\n      <a href='https://github.com/kylbutlr/notes-app-react'>\r\n        <div className='project-image'>\r\n          <div className='project-info'>\r\n            <h6>Notes App (React)</h6>\r\n          </div>\r\n        </div>\r\n      </a>\r\n    </div>\r\n    <div className='project2'>\r\n      <a href='https://github.com/kylbutlr/notes-app-api'>\r\n        <div className='project-image'>\r\n          <div className='project-info'>\r\n            <h6>Notes App (API)</h6>\r\n          </div>\r\n        </div>\r\n      </a>\r\n    </div>\r\n    <div className='project3'>\r\n      <a href='https://github.com/kylbutlr/todo-list'>\r\n        <div className='project-image'>\r\n          <div className='project-info'>\r\n            <h6>Todo List App</h6>\r\n          </div>\r\n        </div>\r\n      </a>\r\n    </div>\r\n    <div className='project4'>\r\n      <a href='https://github.com/kylbutlr/alarm-timer'>\r\n        <div className='project-image'>\r\n          <div className='project-info'>\r\n            <h6>Alarm & Timer</h6>\r\n          </div>\r\n        </div>\r\n      </a>\r\n    </div>\r\n    <div className='project5'>\r\n      <a href='https://github.com/kylbutlr/flex-slideshow'>\r\n        <div className='project-image'>\r\n          <div className='project-info'>\r\n            <h6>Flex Slideshow</h6>\r\n          </div>\r\n        </div>\r\n      </a>\r\n    </div>\r\n    <div className='project6'>\r\n      <a href='https://github.com/kylbutlr/tip-recorder'>\r\n        <div className='project-image'>\r\n          <div className='project-info'>\r\n            <h6>Tip Recorder</h6>\r\n          </div>\r\n        </div>\r\n      </a>\r\n    </div>\r\n  </div>\r\n);\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport { Link, Element, scroller } from 'react-scroll';\nimport Projects from './Projects';\n\nconst tabs = {\n  HOME: 1,\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeTab: tabs.HOME,\n    };\n  }\n  scrollTo() {\n    scroller.scrollTo('scroll-to-element', {\n      duration: 800,\n      delay: 0,\n      smooth: 'easeInOutQuart',\n    });\n  }\n  render() {\n    return (\n      <div className='App'>\n        {/* Header */}\n        <div className='Header'>\n          <div className='title'>\n            <h1>kb</h1>\n            <h2>|</h2>\n            <h3>kylbutlr</h3>\n          </div>\n          <div className='contact-link'>\n            <Link activeClass='active' to='contact-element' spy={true} smooth={true} duration={500}>\n              <h4>contact</h4>\n            </Link>\n          </div>\n        </div>\n        <div className='divider first-divider' />\n\n        {/* Body */}\n        <div className='Body'>\n          <div className='main-app'>\n            <div className='welcome'>\n              <div className='headshot' />\n              <h6>\n                I'm <span className='bold'>Kyle Butler</span>, a junior web developer currently\n                working in Los Angeles, CA.\n              </h6>\n            </div>\n            <div className='divider' />\n            <div className='bio'>\n              <p>\n                I specialize in <span className='bold'>React</span>,{' '}\n                <span className='bold'>JavaScript</span>, and{' '}\n                <span className='bold'>CSS + HTML</span>.\n              </p>\n              <p>\n                I have also had experience working with <span className='bold'>SQL</span>,{' '}\n                <span className='bold'>Java</span>, <span className='bold'>Python</span>, and{' '}\n                <span className='bold'>PHP</span>, and look forward to learning and utilizing many\n                more languages and frameworks throughout my career.\n              </p>\n            </div>\n            <div className='divider' />\n            <div className='projects-underneath'>\n              <Projects />\n              <div className='divider' />\n            </div>\n            <div className='contact'>\n              <Element name='contact-element' className='element'>\n                <h5>CONTACT</h5>\n              </Element>\n              <div className='socials'>\n                <a href='mailto:kylbutlr@gmail.com'>\n                  <div className='icon social-email' />\n                </a>\n                <a href='https://github.com/kylbutlr'>\n                  <div className='icon social-github' />\n                </a>\n                <a href='https://www.linkedin.com/in/kylbutlr/'>\n                  <div className='icon social-linkedin' />\n                </a>\n                <a href='https://www.instagram.com/kylbutlr/'>\n                  <div className='icon social-instagram' />\n                </a>\n              </div>\n              <p>\n                Feel free to reach out at:{' '}\n                <a href='mailto:kylbutlr@gmail.com'>kylbutlr@gmail.com</a>\n              </p>\n            </div>\n          </div>\n          <div className='side-app'>\n            <Projects />\n          </div>\n        </div>\n        <div className='divider last-divider' />\n        <div className='Footer'>\n          <p>Â© 2019 KYLE BUTLER</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}